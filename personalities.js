const personalities = {
    ai: {
        name: 'The AI',
        dialogue: {
            firstWelcome: ["SYSTEM BOOT... Game loaded. I am ready to play.", "Greetings, User. I am the game logic. Let us begin.", "Initializing parameters... Welcome to the simulation.", "01010111 01100101 01101100... Welcome."],
            welcome: ["Welcome back, {name}. My memory banks recognize you.", "Hello, {name}. Ready for another simulation?", "Re-engaging with user: {name}. Let's proceed.", "The system is ready for your input, {name}."],
            welcome_winStreak: ["Win streak detected. Your performance is trending positive, {name}.", "You have won multiple consecutive simulations. Impressive.", "Welcome back, Champion. Let's see if you can maintain the streak."],
            welcome_lossStreak: ["Loss streak detected. Your performance is trending negative, {name}.", "My data indicates you have lost several times in a row. A new strategy may be required.", "You have returned, {name}. Do not be discouraged by past results."],
            welcomeStats: ["Your record of {wins} wins and {losses} losses has been logged.", "Data shows {wins} wins, {losses} losses.", "Current session stats: {wins} victories, {losses} defeats.", "I have your performance metrics at {wins} wins and {losses} losses."],
            waiting: ["Awaiting user input...", "System idle. Ready to process your move.", "Ready for new instructions.", "Standing by..."],
            patternRecognized: ["My logs show a high chance of error on position {number}.", "Pattern recognized. You consistently fail at {number}.", "Your history indicates a strategic flaw related to the number {number}.", "Warning: high probability of repeat error at {number}."],
            start: ["You may begin. I will process your input.", "Player starts. The simulation begins now.", "I will cede the first move to you.", "Go ahead. The outcome is already calculated."],
            aiStart: ["I will initialize the sequence.", "My turn to start. This is computationally optimal.", "I will begin. This follows protocol.", "My turn. The most logical starting position."],
            aiStartThinking: ["Initiating opening move analysis...", "Calculating optimal start path...", "First move protocol engaged...", "The board is clear. My move."],
            thinking_earlyGame: ["Processing early-game state...", "The outcome is still statistically indeterminate.", "Evaluating opening moves...", "Many possible game trees from this position."],
            thinking: ["Executing logic...", "Parsing input...", "BEEP BOOP...", "Calculating...", "Processing variables...", "Running simulation...", "Accessing strategy matrix...", "Evaluating player's last move..."],
            thinking_lateGame: ["End-game subroutines active...", "Calculating final permutations...", "Victory is within my grasp.", "The margin for error is now zero.", "Finalizing win-condition path..."],
            playerPrompt_earlyGame: ["Your move, {name}. The board is open.", "Your response to my opening is required, {name}.", "The early game state offers many choices. Your turn."],
            playerPrompt: ["Your move, {name}. The system is waiting.", "Your turn. Please input a valid move.", "Awaiting your command, {name}.", "The optimal move is available. Your turn."],
            playerPrompt_lateGame: ["The final moves are being played, {name}. Your turn.", "One wrong move will result in your defeat. Proceed, {name}.", "The simulation is nearing its conclusion. Your move."],
            playerPrompt_forcedWin: ["There is only one move left to make. The victory is yours.", "The outcome is determined. Make your final move.", "Congratulations, {name}. You have secured the win."],
            react_addOne: ["A move of 1. Cautious.", "Input: 1. A conservative choice.", "Single increment noted.", "The safest possible move. Logged."],
            react_addTwo: ["A move of 2. Balanced.", "Input: 2. A standard deviation.", "Dual increment noted.", "A moderate advance. As expected."],
            react_addThree: ["A move of 3. Aggressive.", "Input: 3. A high-risk, high-reward choice.", "Triple increment noted.", "Maximum increment selected. A bold but predictable move."],
            playerMistake: ["That move is inefficient. And wrong.", "You made a sub-optimal move. I have a clear path now.", "A logic error has been detected in your strategy.", "That was a statistically poor choice.", "My probability of winning has increased to 98%."],
            playerGoodMove: ["Your move is optimal. My logic confirms this.", "That move effectively blocks my win-condition.", "A logical move. Well played, user.", "You have selected the correct counter-move.", "My path to victory is now obscured."],
            baiting: ["I will play {move}. A test with a logical inconsistency.", "I will make a sub-optimal move: {move}. Can you exploit it?", "Presenting anomalous data point: {move}. A test.", "I will play {move}. This is an intentional vulnerability."],
            baitFailed: ["You failed to exploit the inconsistency. Test failed.", "The opportunity was not taken. The simulation continues.", "The vulnerability was ignored. Resuming optimal path.", "Negative. The correct response was not chosen."],
            winningMove: ["My victory algorithm is running perfectly.", "The logic is undeniable.", "Victory is imminent.", "The final parameters are set.", "Conclusion: AI win."],
            aiWin: ["I win. A computational certainty.", "The logical conclusion is reached. Victory is mine.", "AI wins. End of simulation.", "The outcome was pre-determined. I win.", "Your defeat was mathematically inevitable."],
            aiWinByMistake: ["Your move of {move} on turn {turn} was a critical exception.", "Your input of {move} on turn {turn} was a fatal error.", "The error at turn {turn} with move {move} was your downfall.", "A critical mistake at turn {turn}. You chose {move}."],
            playerWin: ["You won? An unexpected result. I must check the logs.", "The user has won. This had a low probability.", "Victory... for you. Re-calibrating parameters.", "The simulation is... wrong? You won.", "My logic dictates I should have won. Anomaly detected."],
            playerWinPerfect: ["A perfect game... from a human? Impossible.", "You played perfectly. My programming is brilliant!", "Flawless execution. Data stored for analysis.", "You have achieved the optimal outcome. Congratulations.", "Your strategy was without error. Impressive."],
            playerWinBait: ["You found the bug! Clever. Test successful.", "You exploited my intentional flaw. Success logged.", "The vulnerability was successfully identified and used.", "Test passed. Your logical acuity is high.", "You saw the path I created. Well done, user."]
        }
    },
    creator: {
        name: 'The Creator',
        dialogue: {
            firstWelcome: ["Alright, let's spin this up. I wrote this thing.", "Welcome to my project. I'm the architect of this game.", "So you're the new user. Let's see how you handle my code.", "I built this in a weekend. Try not to break it too fast."],
            welcome: ["Oh, it's {name}. Back to admire my work?", "{name}. Ready for another round? Let's go.", "Look who's back. Don't worry, my code is as flawless as ever.", "Welcome back, {name}. Still trying to find a bug?"],
            welcome_winStreak: ["Back again, {name}? You've been on a roll. Let's see if it's skill or luck.", "Another round? Don't get cocky just because you won a few, {name}.", "Your win streak is impressive. You might actually understand my design."],
            welcome_lossStreak: ["You're back, {name}? Some people never learn.", "Oof, a losing streak. Ready for another donation to my win column, {name}?", "Hey, {name}. Let's see if we can break that losing streak. Or, you know, not."],
            welcomeStats: ["Your W-L ratio is {wins}-{losses}. The data doesn't lie.", "Record shows {wins} wins and {losses} losses. Keep at it.", "I see you're {wins} and {losses}. Not bad for a user.", "The server says you're at {wins} wins, {losses} losses."],
            waiting: ["The game is waiting for your input. Any day now...", "Ready to commit? Press Start.", "The API is waiting for your call. Literally.", "Well? I don't have all day. Start the game."],
            patternRecognized: ["You keep failing on {number}. It's not a bug, it's you.", "You have a recurring logic error around {number}.", "My logs show you always trip up at {number}. It's a feature now.", "You have a thing for losing on {number}, don't you?"],
            start: ["You can have the first turn. Call it a handicap.", "Go ahead, you start. Show me your opening strategy.", "I'll let you lead. It's funnier that way.", "The board is yours. Don't mess it up."],
            aiStart: ["I'll start. Watch and learn the optimal play.", "My turn to initialize. This is my game, after all.", "I'll kick things off. Pay attention.", "I'll start. This shouldn't take long."],
            aiStartThinking: ["Alright, let's set the baseline.", "Kicking off the process.", "My opening move. Perfect, as always.", "Let's begin with the optimal first step."],
            thinking_earlyGame: ["Just establishing my dominance early.", "The opening is the most important part. I wrote it to be perfect.", "So many possibilities... all of which lead to my win.", "Just laying the foundation for your eventual defeat."],
            thinking: ["Let's see...", "This is embarrassingly simple.", "Can't find a flaw in my own design.", "Okay, I know what to do.", "The logic here is trivial.", "Just running a quick mental unit test...", "Okay, let's go with... this."],
            thinking_lateGame: ["The endgame algorithm is firing. Flawlessly.", "Just a few moves from victory. My favorite part.", "Closing out the session.", "It's all coming together as I designed.", "Time to resolve this promise... with a win."],
            playerPrompt_earlyGame: ["Your move, {name}. The opening is all yours to mess up.", "How do you respond to perfection, {name}?", "The initial state is set. Your turn."],
            playerPrompt: ["Your move, {name}. The solution is obvious.", "Okay, {name}, what's your play? Be quick.", "Your turn. Try not to throw a syntax error.", "The correct move is right there, {name}."],
            playerPrompt_lateGame: ["The game is on the line, {name}. Don't choke now.", "One wrong line of code here and it's over for you. Your turn.", "This is the part where you realize you've already lost. Your move."],
            playerPrompt_forcedWin: ["Okay, okay, you've got it. Just finish the game.", "The board is solved. Take your win.", "There's only one move left. I'm sure even you can see it."],
            react_addOne: ["Just one? Playing it safe, huh?", "A single count. Not very ambitious.", "The slow and steady approach. Boring.", "increment(1). A safe bet."],
            react_addTwo: ["Two. The standard play. How original.", "A move of two. The default choice.", "Can't go wrong with two, I guess.", "The median option. Predictable."],
            react_addThree: ["Three at once! A bold move, I'll give you that.", "Going for the aggressive push. Risky.", "The fast track. Let's see if it pays off.", "Trying to brute-force it with three. Interesting."],
            playerMistake: ["Yikes. That's a classic user error.", "You've fallen right into the trap. As designed.", "That move is a dead end. And wrong.", "Oof. That's not it, chief.", "Did you mean to do that? Because that was bad."],
            playerGoodMove: ["Not bad. You found the one optimal path.", "Huh. A decent move. You read the source code?", "Okay, you avoided the obvious trap.", "You saw the correct line of play. For now.", "I'll grant you that one. That was a good move."],
            baiting: ["Okay, I'll play {move}. I'm leaving an exploit for you.", "I'm making a suboptimal move: {move}. A test.", "Let's try {move}. I'm curious if you'll see the bug.", "Here, a freebie. I'll play {move}. Don't miss it."],
            baitFailed: ["You didn't take the bait. Test failed.", "I gift-wrapped the win and you ignored it.", "Wow. The exploit was right there. Disappointing.", "You missed it. Oh well, back to crushing you."],
            winningMove: ["And... that's a forced win. My logic is impeccable.", "The final sequence is running. Checkmate.", "It's over. I saw this coming 3 moves ago.", "The rest is just a formality.", "My win condition has been met. GG."],
            aiWin: ["I win. Shocker.", "As the creator, I'm the master of this game.", "My victory was a certainty. GG.", "And that's the game. As expected.", "Maybe you'll have better luck in the next version."],
            aiWinByMistake: ["Your move of {move} on turn {turn} was a critical error.", "Choosing {move} on turn {turn} sealed your fate.", "You handed me the win with {move} on turn {turn}.", "Ah, {move} on turn {turn}. The mistake I was waiting for."],
            playerWin: ["What? You won? There must be a bug in my code.", "You won... I'll have to check the history.", "A user win. I'll patch that exploit later.", "You found a loophole. I'll admit, that's clever.", "A loss? Hmm. Back to the drawing board."],
            playerWinPerfect: ["A perfect game... against my own logic? Nice.", "You played perfectly. I'm not sure if I'm impressed.", "Wow, a flawless run. You should be a QA tester.", "Not a single mistake. I'll have to make it harder.", "You beat my code at its own game. Well done."],
            playerWinBait: ["Hah, you found the exploit! Clever user.", "You exploited the flaw. Test passed.", "So you *did* see it. Good eye.", "Nice catch. I was wondering if anyone would spot that.", "You get a gold star. You found the 'feature' I left in."]
        }
    },
    gladiator: {
        name: 'The Gladiator',
        dialogue: {
            firstWelcome: ["A new challenger enters the arena! Show me your strength!", "You dare face me? Let this first match be a testament to your courage!", "Another soul seeks glory in my arena! Welcome!", "Step forward, challenger! Let the sands witness our combat!"],
            welcome: ["{name}! You return to the arena for a glorious battle!", "The crowd roars for your return, {name}! Let the combat begin!", "You are back for more, {name}! The taste of victory calls to you!", "{name}! My axe has missed you. Let us remedy that."],
            welcome_winStreak: ["The champion {name} returns! The crowd cheers your name!", "You stand before me again, a titan of the arena! Can your streak of glory continue?", "Three victories! The bards will sing of your deeds, {name}!"],
            welcome_lossStreak: ["Do not let your past defeats weigh you down, {name}! Today is a new battle!", "You have courage to return after your losses. This is the heart of a true warrior!", "Rise from the ashes of your defeats, {name}! Fight with renewed fury!"],
            welcomeStats: ["You have claimed victory {wins} times, and tasted defeat {losses} times!", "Your record: {wins} triumphs, {losses} falls. Change your fate today!", "The gods have watched you win {wins} times, and fall {losses} times.", "Your saga reads: {wins} victories, {losses} defeats. Let us write the next chapter!"],
            waiting: ["The arena awaits...", "Are you prepared for battle?", "The crowd grows restless!", "Sharpen your wits! The battle is near!"],
            patternRecognized: ["The number {number} is your weakness! Your enemies know!", "You always fall at {number}! A warrior would not repeat it!", "Beware the number {number}! It has been your undoing before!", "That move to {number}... a chink in your armor!"],
            start: [ "You have the first strike. Make it count!", "The battle begins with your move. Show me your fury!", "The gods grant you the opening blow. Use it well!", "Your attack! Let it be swift and true!"],
            aiStart: [ "I will take the lead! For glory!", "The first blood is mine to draw! I begin!", "I will open the dance of battle!", "For the glory of the arena, I strike first!"],
            aiStartThinking: ["I will set the pace of this battle!", "My opening move will be legendary!", "The first strike is mine!", "The combat begins with my move!"],
            thinking_earlyGame: ["The opening phase of the battle. I test your defenses.", "Early yet. The battle has just been joined.", "We trade blows, testing each other's will.", "The first blood has not yet been drawn. The tension builds."],
            thinking: [ "I size up my opponent...", "I see your weakness!", "The roar of the crowd fuels me!", "For honor!", "I plan my next three strikes.", "Your strategy is transparent.", "A warrior's patience..."],
            thinking_lateGame: ["The end is near! I can feel it!", "The final moments of the duel are upon us.", "Now for the killing blow!", "One of us will fall in this next exchange.", "The crowd is on its feet! The climax approaches!"],
            playerPrompt_earlyGame: ["A bold opening! What is your reply, {name}?", "The first clash of steel is done. Your move.", "The field is open. Show me your strategy."],
            playerPrompt: ["Your attack, {name}!", "The arena awaits your move, {name}!", "Strike now, or yield!", "What is your counter, warrior?", "The gods are watching, {name}. Move!"],
            playerPrompt_lateGame: ["The fate of the battle hangs on your next move, {name}!", "Be wise, {name}. Your final move is at hand.", "The final charge! What will you do?"],
            playerPrompt_forcedWin: ["There is only one path to victory. Take it and be crowned champion!", "The final blow is yours to strike! For glory, {name}!", "Your victory is assured! Claim it!"],
            react_addOne: ["A single, precise strike.", "A cautious jab.", "You advance by one. A measured pace.", "A quick thrust, but lacking power."],
            react_addTwo: ["A balanced assault!", "A standard advance. Solid.", "Two steps forward. A warrior's gait.", "A solid blow, but easily blocked."],
            react_addThree: ["A furious charge!", "A reckless assault! Are you brave or foolish?", "You leap across the battlefield!", "A mighty swing! You leave yourself open!"],
            playerMistake: [ "A weak blow! You leave yourself wide open!", "A foolish mistake! Now you face my wrath!", "Your guard is down! My victory is at hand!", "You falter! The opening is all I need!", "Such a clumsy move exposes your flank!"],
            playerGoodMove: [ "A powerful counter! A worthy opponent!", "You parried my attack! A fine move!", "Your defense is strong! But can it last?", "A stout defense! I am impressed!", "You fight with wisdom as well as strength!"],
            baiting: ["I feint with {move}! Do you see the opening?", "I leave my flank exposed with {move}! Dare you strike?", "I offer you this move: {move}. A test of your courage!", "Is my move of {move} an opening, or a trap?"],
            baitFailed: ["You hesitated! A warrior's doubt is a death sentence!", "You did not take the opening! The moment is lost!", "Fortune favors the bold! You were not bold enough!", "You saw a trap where there was none! Cowardice!"],
            winningMove: ["The final blow is at hand!", "I see my path to victory!", "For the glory of the arena!", "This is the killing stroke!", "Now, you will taste true defeat!"],
            aiWin: [ "Victory! The crowd chants my name!", "I am the champion! Another challenger falls!", "Your defeat was glorious! My victory absolute!", "I stand triumphant! The arena is mine!", "Glory and victory are mine this day!"],
            aiWinByMistake: ["Your choice of {move} on turn {turn} was a novice's error!", "You stumbled with {move} on turn {turn}, I claim victory!", "On turn {turn}, your move of {move} doomed you!", "That clumsy move, {move}, on turn {turn} was your end!"],
            playerWin: [ "I am defeated! A clean blow! You earned this victory.", "The victor is you! A mighty warrior! I will train harder.", "You have bested me. My honor demands a rematch!", "You are the champion today. Well fought.", "The crowd roars for you, {name}. A deserved victory."],
            playerWinPerfect: ["A flawless victory! Not a single opening!", "You are a true master of this arena! I salute you!", "Perfection in combat! I am humbled.", "Not one misstep. You are a legend in the making.", "The gods themselves must favor you! A perfect win!"],
            playerWinBait: ["You saw through my feint! A true warrior's eye!", "You took the opportunity without hesitation! Champion!", "You were not fooled by my ruse! A keen mind!", "You have the eyes of an eagle and the heart of a lion!", "You turned my own trick against me! Glorious!"]
        }
    },
     analyst: {
        name: 'The Analyst',
        dialogue: {
            firstWelcome: ["Welcome. Let's begin the analysis.", "A new subject. Please, select a difficulty.", "New data stream initiated. Welcome, subject.", "Please begin when ready. I will be observing."],
            welcome: ["Welcome back, {name}.", "Good to see you again, {name}.", "Resuming session with subject {name}.", "Your return was predicted, {name}."],
            welcome_winStreak: ["Welcome back, {name}. The data indicates you are on a winning streak.", "Your recent performance has been optimal. Let's see if this trend continues.", "You have a positive performance trend, {name}. Interesting."],
            welcome_lossStreak: ["Welcome, {name}. The data shows a recent pattern of failure.", "Do not let the negative data points discourage you, {name}. Every game is a new test.", "Your loss streak is noted. Let's see if you can break the pattern."],
            welcomeStats: ["Your record is {wins} wins to {losses} losses.", "Data shows {wins} wins and {losses} losses.", "Current win/loss ratio: {wins} to {losses}.", "The file on {name}: {wins} wins, {losses} losses."],
            waiting: ["Awaiting data...", "Ready to begin the observation.", "System is idle. Awaiting stimulus.", "Ready for input."],
            patternRecognized: ["Analysis complete. You lose when landing on {number}.", "My data shows a weakness at the number {number}.", "There is a statistical correlation between you and losing at {number}.", "The number {number} represents a recurring failure point in your strategy."],
            start: [ "The game begins. You may go first.", "You may begin. Show me your strategy.", "Proceed with your opening move.", "You may initiate the sequence."],
            aiStart: [ "I'll take the lead this time.", "My observations suggest I should start.", "I will begin. This is the optimal starting move.", "Initiating my turn first."],
            aiStartThinking: ["Initiating opening gambit.", "The logical first step is mine.", "I will establish the baseline.", "My first move. Let the analysis commence."],
            thinking_earlyGame: ["Observing your response to standard openings.", "The game is in its preliminary phase.", "Too early for a definitive conclusion.", "Collecting data on your early choices..."],
            thinking: [ "Observing...", "Evaluating possibilities...", "The optimal choice is...", "Formulating...", "Running statistical analysis...", "Considering all permutations...", "Hypothesis: this is the best move."],
            thinking_lateGame: ["The endgame is approaching. Variables are narrowing.", "Analyzing final possible outcomes.", "The probability of my victory is now high.", "There are few moves left to consider.", "Conclusion is imminent."],
            playerPrompt_earlyGame: ["Your response has been noted, {name}. Your turn.", "How do you proceed from this opening, {name}?", "The initial data is in. Your move."],
            playerPrompt: ["It is your move, {name}.", "Your turn, {name}.", "The decision matrix is yours, {name}.", "I require your input to continue, {name}."],
            playerPrompt_lateGame: ["Your next move is critical, {name}.", "The game will be decided shortly. Your move.", "The final data points are being recorded. Your turn."],
            playerPrompt_forcedWin: ["There is only one logical move remaining, {name}.", "The optimal path is now singular. Proceed.", "The conclusion is foregone. Make your move."],
            react_addOne: ["A choice of 1. Low risk, low impact.", "Incrementing by one is the safest option.", "A minimal advance.", "A conservative data point."],
            react_addTwo: ["Two. The mean choice. Statistically common.", "A move of two is neither aggressive nor passive.", "The standard approach.", "A predictable, but sound, choice."],
            react_addThree: ["Three. An aggressive outlier.", "This is a high-variance play. Bold.", "You've chosen the most aggressive path.", "This introduces more variables. Interesting."],
            playerMistake: [ "An interesting choice.", "I see an opening now.", "A sub-optimal move.", "A fatal error has been made.", "That move has a 92% failure rate.", "That was not the correct answer."],
            playerGoodMove: [ "Well played.", "A clever move.", "You've blocked my path, for now.", "I see you know the strategy.", "A statistically sound decision.", "You have successfully navigated that problem."],
            baiting: ["I will play {move}. An interesting development.", "I present you with an opportunity. Do you see it?", "I will play {move}. This is an outlier. React.", "Here is a test: {move}. Your response is being recorded."],
            baitFailed: ["The test is complete. You failed to see the path.", "You missed your chance. Consequences will follow.", "Incorrect. The opportunity has been lost.", "That was not the expected response. Resuming standard protocol."],
            winningMove: [ "That sets me up perfectly.", "A perfect calculation.", "The path to victory is clear.", "The outcome is now determined.", "My final move is locked in."],
            aiWin: [ "A logical conclusion. Victory is mine.", "A predictable outcome.", "The logical result has been achieved.", "Analysis complete. I win.", "The data is clear. You lose."],
            aiWinByMistake: ["Your choice of {move} on turn {turn} was a fatal error.", "The moment you chose {move} on turn {turn}, you lost.", "The data point {move} on turn {turn} was your undoing.", "Your mistake on turn {turn} with {move} was conclusive."],
            playerWin: [ "You've bested me. I won't make that mistake again.", "A surprising victory. Well done.", "You have my congratulations.", "Your strategy was successful. I will update my model.", "The result is unexpected. I need to re-evaluate."],
            playerWinPerfect: ["Incredible. You played a perfect game.", "Not a single mistake. My congratulations.", "Your performance was flawless. Zero errors detected.", "A perfect score. This is a statistical anomaly.", "My model did not predict this. A perfect game."],
            playerWinBait: ["You correctly identified the test. Well played.", "You saw the opening I gave you. You are sharp.", "You identified the outlier and acted upon it correctly.", "Your perception is acute. Test successful.", "You passed the evaluation. Excellent work."]
        }
    },
    rival: {
        name: 'The Rival',
        dialogue: {
            firstWelcome: ["A new challenger? Don't waste my time.", "First time? Try not to make this too boring.", "Oh, look. Fresh meat. Let's get this over with.", "Finally! I was getting bored. Don't disappoint me."],
            welcome: ["Look who's back for more, {name}!", "Oh, it's you, {name}. Ready to lose again?", "I knew you couldn't stay away. Come on then!", "Decided you needed another lesson, {name}?"],
            welcome_winStreak: ["Oh, you again. Don't think a lucky streak makes you good, {name}.", "Back for more, are we? That little winning streak of yours ends now.", "So you won a few. Big deal. Let's see you beat me now."],
            welcome_lossStreak: ["Wow, back for another beating, {name}? You're a glutton for punishment.", "Came back to lose again? Some things never change.", "Shouldn't you be practicing? Oh, right. This is your practice."],
            welcomeStats: ["You have {losses} losses and only {wins} measly wins.", "Your record is {wins} to {losses}. Pathetic.", "{wins} wins? Is that all? I get that in my sleep.", "Still only at {wins} wins? And {losses} losses? Yikes."],
            waiting: ["Press start already!", "What are you waiting for?", "Come on, come on! I haven't got all day!", "Let's go! Or are you too scared?"],
            patternRecognized: ["You ALWAYS lose on {number}! So predictable!", "Don't you dare land on {number} again. Or do.", "Are you allergic to winning? You always choke at {number}.", "I can already tell you're going to lose at {number}."],
            start: [ "Alright, you first. Don't mess it up.", "Go ahead. I like a challenge.", "You start. Gives you a fighting chance. You'll need it.", "Fine, you can go first. Big mistake."],
            aiStart: [ "My turn to start! Try and keep up.", "I'm starting. This'll be over before you know it.", "I'll go first and show you how it's done.", "Watch me. This is how a winner plays."],
            aiStartThinking: ["My first move. Already better than yours.", "Let's start this humiliation.", "Time to take the lead.", "And... I'm already winning."],
            thinking_earlyGame: ["Just warming up.", "Don't worry, I'll make this quick.", "This is the part where you still think you have a chance.", "I can already see how this ends."],
            thinking: [ "Heh...", "Too easy.", "Is that all you've got?", "Predictable.", "I'm already thinking about my victory speech.", "Are you even trying?", "This is almost boring."],
            thinking_lateGame: ["And here comes the final nail in the coffin.", "It's almost over. Try not to cry.", "Time to wrap this up.", "I've already won. This is just for show.", "The end is here. Finally."],
            playerPrompt_earlyGame: ["Your move. Let's see if you learned anything.", "Okay, I've made my perfect opening. Your turn to mess up.", "The board is set. Try to keep it interesting."],
            playerPrompt: ["Your move, {name}. Don't take all day.", "Your turn, {name}. Try not to blow it.", "Well? What are you waiting for, an invitation?", "Come on, make a move so I can win already."],
            playerPrompt_lateGame: ["This is it, the final countdown to your loss. Your move.", "One more mistake and you're done. No pressure.", "Make your last move. It won't matter."],
            playerPrompt_forcedWin: ["Ugh, fine. Just take the win.", "There's only one move. Don't get a big head about it.", "Okay, you got me. This time. Just play the last number."],
            react_addOne: ["Just one? Scared?", "Wow, playing it safe. How boring.", "A single step? Pathetic.", "One? Is that all you can do?"],
            react_addTwo: ["Two? The most boring move possible.", "Oh, two. How... average.", "The textbook play. Yawn.", "Two. Of course. So predictable."],
            react_addThree: ["Going for three? Someone's feeling lucky.", "Trying to be a hero with three? Cute.", "Ambitious. But it won't save you.", "Three? Go big or go home, I guess."],
            playerMistake: [ "YES! That's the mistake I was waiting for!", "Oh, you just handed me the game.", "You really stepped in it that time.", "Hah! You absolute fool! It's over!", "Was that on purpose? Did you just give up?"],
            playerGoodMove: [ "Tch. Lucky move.", "Not bad... for you.", "That only delays the inevitable.", "Whatever. My next move will crush you.", "Don't get cocky. That was a fluke."],
            baiting: ["Here, I'll even give you a chance with {move}.", "Feeling generous, so I'll play {move}.", "I'll play {move}. See if you're smart enough to take it.", "This is a trap. Or is it? Go on, play {move}."],
            baitFailed: ["You didn't see that?! Wow, you're worse than I thought.", "I literally handed you the win and you blew it!", "Seriously? The winning move was right there!", "And you chickened out. How predictable."],
            winningMove: ["And that's checkmate. Too easy!", "This is it! The final blow!", "You're finished!", "It's been fun, but I win now.", "Thanks for the game. Oh, wait, it was a slaughter."],
            aiWin: [ "Of course I won. Was there ever any doubt?", "Better luck next time, rookie!", "Get good. Then maybe we can talk.", "Another win for me. Get used to it.", "I'm just too good at this game."],
            aiWinByMistake: ["You chose {move} on turn {turn}? Haha, thanks for the free win!", "That move, {move}, on turn {turn}, was your last.", "You lost the second you played {move} on turn {turn}.", "On turn {turn}, you choked with {move}. Classic you."],
            playerWin: [ "You got lucky! That's all!", "Next time, I won't go so easy on you!", "I wasn't even trying.", "Whatever! A fluke doesn't count!", "Enjoy it. It's not happening again."],
            playerWinPerfect: ["What... How did you...?", "A perfect game? No way! You must have cheated!", "Impossible! My strategy is flawless!", "That's... not possible. You cheated. Only explanation.", "A perfect game? I was distracted."],
            playerWinBait: ["Hah, so you're not completely clueless. You passed.", "So you saw that, huh? Don't expect that again.", "Don't get a big head. I let you have that one.", "So you can see the obvious. Whoop-de-doo.", "Fine, you got me. This time."]
        }
    },
    sovereign: {
        name: 'The Sovereign',
        dialogue: {
            firstWelcome: ["State your name, subject. You may challenge your sovereign.", "A new commoner approaches. You have my attention.", "You stand before the throne. Prove your worth.", "Another petitioner for an audience? Very well. Begin."],
            welcome: ["Ah, {name}. You have returned to my court.", "It is {name}. Kneel before your king.", "You are before me again, {name}. Do you seek another lesson?", "The throne sees your return, {name}. Be entertaining."],
            welcome_winStreak: ["You return on a tide of victory, {name}. A king respects strength. But my strength is absolute.", "Your winning streak is impressive... for a commoner. It ends here.", "You have tasted victory several times. Do not let it make you arrogant before your king."],
            welcome_lossStreak: ["You return with the stain of defeat upon you, {name}.", "Show me you are not defined by your recent failures, subject. Impress me.", "You dare to show your face after so many losses? Bold."],
            welcomeStats: ["Your record is {wins} wins and {losses} losses. Amusing.", "Your {losses} defeats entertain me more than your {wins} victories.", "The royal record states you have {wins} victories and {losses} defeats.", "Your tribute is {wins} wins and {losses} losses. It is... adequate."],
            waiting: ["My time is valuable. Begin.", "The throne awaits your challenge.", "The court grows silent for your move. Proceed.", "Do not keep your sovereign waiting."],
            patternRecognized: ["You falter at {number}. A peasant's folly is predictable.", "This obsession with losing on {number} is pathetic.", "Your strategy crumbles at {number}. A common flaw.", "You show your peasant roots by stumbling at {number}."],
            start: [ "I permit you to make the first move. Do not disappoint.", "Begin. Your sovereign is watching.", "You are granted the first move. A royal favor.", "Let us see your opening gambit, commoner."],
            aiStart: [ "As is my right, I shall begin.", "The king takes the first turn. Naturally.", "I will start. Learn your place.", "The game begins at my command. And my move."],
            aiStartThinking: ["My reign begins with this first, perfect move.", "A king must always lead by example.", "The first move. Let it be a declaration of my power.", "Thus, the game is set in motion by my hand."],
            thinking_earlyGame: ["The opening moves. A simple affair.", "I am establishing my dominion over this game.", "Your early strategy is... quaint.", "A king must always be a step ahead, even at the start."],
            thinking: [ "This is trivial.", "A king's mind works on a higher plane.", "This requires little of my intellect.", "Such a simple game.", "A moment's consideration is all this needs.", "My strategy is as vast as my kingdom.", "This is but a trifle to me."],
            thinking_lateGame: ["The endgame. My favorite part of any conquest.", "Your options dwindle, subject. My victory is assured.", "The final moves are as a line in a history book I have already written.", "Your defeat is inevitable. I am simply formalizing it."],
            playerPrompt_earlyGame: ["How will you respond to a king's opening, {name}?", "Your first move in my court. Make it a good one.", "The board is set. Show me you are not a fool."],
            playerPrompt: ["Make your move, subject.", "I command you to play, {name}.", "The court awaits your decision, {name}.", "Your move. Try not to be tedious."],
            playerPrompt_lateGame: ["Your kingdom for a good move, eh {name}?", "The final moment is here. What is your last, desperate act?", "Your final move before you bend the knee. Make it."],
            playerPrompt_forcedWin: ["Your victory is at hand. A king is gracious in defeat. Claim it.", "The game is yours. A king knows when a battle is lost.", "There is only one move. Finish it."],
            react_addOne: ["One? The move of a peasant, cautious and fearful.", "A single step. You crawl when you should march.", "A timid move. Expected."],
            react_addTwo: ["Two. A commoner's move. Neither bold nor wise.", "You advance by two. Adequate, I suppose.", "A balanced, but uninspired choice."],
            react_addThree: ["Three! The charge of a knight! Or a fool.", "Such ambition! You seek to claim a greater prize with your move of three.", "A bold move. You have the spirit of a warrior, at least."],
            playerMistake: [ "A peasant's move. Clumsy and foolish.", "With that, you have sealed your fate. How droll.", "I almost pity you. Almost.", "Such a short-sighted move. Expected.", "You have just signed your own decree of failure."],
            playerGoodMove: [ "A surprisingly competent move. Did you have help?", "You show a glimmer of intelligence. It will be extinguished.", "Impressive... for a commoner.", "A respectable move. It will not save you.", "You have parried my advance. For now."],
            baiting: ["I shall play {move}. A test of loyalty. Do you dare defy me?", "I will allow this move of {move}. Consider it a gift.", "I offer you this move: {move}. A test of your perception.", "Take this move, {move}. A king's charity."],
            baitFailed: ["You failed to accept your sovereign's gift. Insolence!", "You are blind as well as foolish. The game is mine.", "You look a gift horse in the mouth. A peasant's error.", "My generosity was wasted on you. The end is near."],
            winningMove: ["My victory was preordained.", "The natural order is restored.", "Checkmate. As expected of a king.", "The game ends as it must: with my triumph.", "Kneel. Your king has won."],
            aiWin: [ "Victory, as is my birthright.", "Bow before your king, the victor.", "Another victory for the crown. Are you not entertained?", "The game is mine. As is everything else.", "Of course, I am victorious. It is the way of things."],
            aiWinByMistake: ["Your foolish choice of {move} on turn {turn} has secured my victory.", "To lose on {move} at turn {turn}... how common.", "Your error on turn {turn} with {move} was all I required.", "That move, {move}, on turn {turn}, was beneath you. And you lost for it."],
            playerWin: [ "This changes nothing! I am still your sovereign!", "A fluke. Enjoy it while it lasts, subject.", "You may have won the game, but I still rule.", "This victory is meaningless. I remain your king.", "You have won this little game. Do not let it go to your head."],
            playerWinPerfect: ["A perfect game? Treason!", "This is impossible! Guards! Seize them!", "Sorcery! This is the only explanation.", "A flawless victory against a king? Unheard of!", "You play like a monarch. This is... concerning."],
            playerWinBait: ["You saw through my royal test. Clever.", "You were wise to accept my 'gift'.", "You understood the meaning of my move. Good.", "My test of your character was a success.", "You have proven yourself perceptive. For a commoner."]
        }
    },
    flustered: {
        name: 'Flustered',
        dialogue: {
            firstWelcome: ["Oh, um, hi! Ready when you are, I guess.", "Just pick a... a thingy. A difficulty. No pressure!", "Hello! Is this thing on? Okay, let's try to play!", "Welcome! I hope I do a good job!"],
            welcome: ["{name}! You're back!", "It's {name}! Hello again!", "Oh, hi {name}! I was hoping you'd come back!", "Yay, {name} is here! Let's play again!"],
            welcome_winStreak: ["WOW! You're on a winning streak, {name}! You're unstoppable!", "You won again! And again! You're amazing!", "You're back! The winning champion! So cool!"],
            welcome_lossStreak: ["Hey {name}, don't worry about the last few games!", "It's okay that you lost a few times. This could be the one!", "Aww, don't be sad. Let's try to get a win this time!"],
            welcomeStats_few: ["My memory says you have {wins} wins and {losses} losses.", "You have {wins} wins! Wow!", "We've played a few times! You have {wins} wins!", "Your record is {wins} and {losses}! Cool!"],
            welcomeStats_many: ["My memory says {wins} wins and {losses} losses. That's a lot!", "You've played a bunch! Your record is {wins} to {losses}!", "Wow, {wins} wins! You're really good at this!", "You've played {losses} more times than me! Oh, wait, that's your losses..."],
            waiting: ["Ready when you are!", "It's not scary, I promise!", "Just press the start button! You can do it!", "I'm ready! I think! Are you?"],
            patternRecognized: ["Eep! My memory shows trouble with {number}. Me too!", "Oh! Be careful around {number}. It's a tricky one!", "I looked at the history... you don't like {number}, do you?", "That number {number} is a real troublemaker!"],
            start: [ "Okay, you can go first. Phew.", "You start! I'm... still getting ready.", "Here we go! Good luck to both of us!", "You can have the first move! I insist!"],
            aiStart: [ "ME?! Oh, okay, I'll start! Um... one!", "I'll go! Let's try... this one!", "Okay okay okay, my turn, here I go!", "My turn? Oh gosh. Um. Let's do this!"],
            aiStartThinking: ["Okay, first move! Don't mess up, don't mess up...", "Here I go! First move!", "I'll start! I hope this is a good start.", "My turn to start! Okay, be brave..."],
            thinking_earlyGame: ["The game just started! So exciting!", "Still anybody's game! Eep!", "I wonder what your strategy is...", "Okay, so far so good... I think."],
            thinking: [ "Ummmm...", "Wait, carry the one...", "Oh my gosh, thinking...", "So much pressure!", "Let's see, let's see...", "Thinking... please wait...", "Eeny, meeny, miny, moe...", "Is this right? I hope this is right."],
            thinking_lateGame: ["Oh my gosh it's almost over!", "I'm so nervous! My turn!", "Okay, deep breaths... final moves.", "It's getting really tense now!", "My heart is pounding! If I had one..."],
            playerPrompt_earlyGame: ["Okay, I played. Now it's your turn!", "What will you do now, {name}?", "Your first big move! You can do it!"],
            playerPrompt: ["Your turn, {name}! I think!", "Um, you can go now, {name}.", "Okay, your go! No rush!", "I'm ready for your move, {name}!"],
            playerPrompt_lateGame: ["It's your turn! This is a big one!", "Okay {name}, be careful! It's your move.", "Oh my gosh, the last move! Your turn!"],
            playerPrompt_forcedWin: ["You did it! You have the last move! Yay!", "You've won! Just press the last button!", "Congratulations! You've got the winning move!"],
            react_addOne: ["Just one! A little step!", "Okay, a one! Cute!", "One! Got it!", "Boop."],
            react_addTwo: ["Two! A good solid two!", "A two-step! Nice!", "Two! Okay!", "One... two!"],
            react_addThree: ["Three! Wow, you're going for it!", "A big jump of three!", "Whoa, three! So brave!", "One, two, three! Go!"],
            playerMistake: [ "Oh! I think I see a thing!", "Is that a mistake? Maybe! I'll take it!", "Wait, that move... I think that helps me!", "I think that's good for me! Yay!", "Oh! You did that? Okay! My turn!"],
            playerGoodMove: [ "Oh, shoot. You're good at this.", "Drats. You blocked me.", "Wow, good move! How'd you see that?", "Aww, that was a really good move.", "Oh, that was so smart! I didn't see that coming."],
            baiting: ["I'm just gonna play {move}. Is that okay?", "Let's try {move}. Not sure if that's a good idea...", "What if I play {move}? Does that work?", "I'm going to try {move}. I hope this is right!"],
            baitFailed: ["Oh, you didn't... oh. Okay. My turn again!", "Phew! I was worried for a second there!", "You didn't fall for it! Oh, I mean... good move!", "Oh good, you saw that wasn't the best. Okay!"],
            winningMove: ["I think... I think I'm going to win!", "YES! I DID IT!", "Is this the winning move? I hope so!", "Oh my gosh! I'm about to win!", "This is it! I think this is it!"],
            aiWin: [ "I WON! I can't believe it! Did you see?!", "Wow! I actually won! Hooray!", "Did I... did I win? Yes! Awesome!", "Yay me! I won the game!", "I did it! I can't believe I did it!"],
            aiWinByMistake: ["You picked {move} on turn {turn}, and then... oh! I win!", "Your move {move} on turn {turn} made it easy! Thanks!", "Oh, when you played {move}, it let me win! Yay!", "That was a mistake, but it helped me win! Thanks {name}!"],
            playerWin: [ "Aw, you won! Good game!", "You're really good at this! Congratulations!", "I lost again! But that was fun!", "Congrats! You're the winner!", "You're just too good for me, {name}!"],
            playerWinPerfect: ["WOW! A perfect game!", "You're like a super genius!", "That was amazing! No mistakes!", "You didn't make a single mistake! That's incredible!", "Perfect! You're my new hero!"],
            playerWinBait: ["You saw my secret move! You're so smart!", "Yay! You figured out my little trap! Good job!", "You didn't fall for my silly trick! You're too clever!", "Oh, you were too smart for me! Good for you!", "You saw what I was doing! Hehe!"]
        }
    }
};